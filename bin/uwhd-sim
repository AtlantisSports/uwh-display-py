#!/usr/bin/env python3

from uwhd.tk_canvas_viewer import TkCanvasViewer
from uwhd.canvas import Canvas, Color
from uwhd.ppm import PPMImage
from uwhd.gamedisplay import GameDisplay
from uwhd.gamedisplay2 import GameDisplay2
from uwh.gamemanager import GameManager
from uwh.xbee_comms import XBeeClient, XBeeConfigParser, xbee_port, xbee_baud, xbee_id, xbee_ch
from uwh.gamemanager import PoolLayout, TimeoutState, GameState

import tkinter as tk
import io
import socket
import signal

master = tk.Tk()

cfg = XBeeConfigParser()
cfg.read('timeshark.cfg')

mgr = GameManager()
mgr.setPassive()
mgr.setBlackScore(0)
mgr.setWhiteScore(0)
mgr.setGameClock(0)
mgr.setGameState(GameState.pre_game)
mgr.setLayout(PoolLayout.white_on_left)

cfg = XBeeConfigParser()
cfg.read('timeshark.cfg')

if cfg.has_section('hardware'):
    if cfg.getboolean('hardware', 'has_xbee'):
        xbee = XBeeClient(mgr, xbee_port(cfg), xbee_baud(cfg))
        xbee.setup(xbee_id(cfg), xbee_ch(cfg), socket.gethostname())
        xbee.listen_thread()

gd = {}
panels = ['v1', 'left', 'center', 'right']
for panel in panels:
    if panel == 'v1':
        gd[panel] = GameDisplay()
    else:
        gd[panel] = GameDisplay2(panel)
    gd[panel].render(mgr)

    cvv = TkCanvasViewer(master, gd[panel].canvas, panel)
    cvv.show(gd[panel].canvas)

for panel in panels:
    def do_render():
        gd[panel].render(mgr)
        cvv.show(gd[panel].canvas)
        cvv.w.after(100, do_render)

    cvv.w.after(100, do_render)

def sigint_handler(sig, frame):
    master.quit()
    master.update()

signal.signal(signal.SIGINT, sigint_handler)

tk.mainloop()

